<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ex</groupId>
	<artifactId>learn-spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>learn-spring</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<dockerfile-maven-plugin.version>1.3.7</dockerfile-maven-plugin.version>
		<logger.version>0.3.1</logger.version>
		<sleuth.version>2.2.2.RELEASE</sleuth.version>
		<micrometer.version>1.3.5</micrometer.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!--  Below dependency was added for junit execution as part of Spring Boot Project -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency> 
		
		 <!-- exclude logback , add log4j2 -->
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		
		  <!-- asynchronous loggers -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.2</version>
        </dependency>
        
        <!--  Prerequisites for traceId and spanId in any logging -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		</dependency>
		
	    <!-- Zipkin -->
		<dependency> 
		  <groupId>org.springframework.cloud</groupId>   
		  <artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>

        <!--  Fluentd logging in java -->
		<dependency>
		    <groupId>org.fluentd</groupId>
		    <artifactId>fluent-logger</artifactId>
		    <version>${logger.version}</version>
		</dependency>
        
        <!-- for log4j2.yml, need jackson-databind and jackson-dataformat-yaml -->
        <!-- spring-boot-starter-web -> spring-boot-starter-json -> jackson-databind-->
        <!-- included by spring boot
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        -->
        
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        
        <!--  AWS S3 implementation -->
         <dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk</artifactId>
		    <version>1.11.734</version>
		</dependency>
		
		<!-- Micormeter core  -->
		<dependency>   
		  <groupId>io.micrometer</groupId>   
		  <artifactId>micrometer-core</artifactId>
		</dependency>
		
		<!-- Micrometer Prometheus registry  -->
		<dependency>
		  <groupId>io.micrometer</groupId>
		  <artifactId>micrometer-registry-prometheus</artifactId>
	    </dependency>
       
       <!--  Jasypt with Spring Boot. Enables encryptable properties across entire spring env -->
       <dependency>
		  <groupId>com.github.ulisesbocchio</groupId>
		  <artifactId>jasypt-spring-boot-starter</artifactId>
		  <version>3.0.2</version>
	   </dependency>
       
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
		  <!-- Sleuth automatically adds trace interceptors when in the classpath -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-sleuth</artifactId>
				<version>${sleuth.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
			  <artifactId>maven-assembly-plugin</artifactId>
			  <configuration>
			    <archive>
			      <manifest>
			        <mainClass>com.ex.learnspring.LearnSpringApplication</mainClass>
			      </manifest>
			    </archive>
			    <descriptorRefs>
			      <descriptorRef>jar-with-dependencies</descriptorRef>
			    </descriptorRefs>
			  </configuration>
			  <executions>
			    <execution>
			      <id>make-assembly</id>
			      <phase>package</phase>
			      <goals>
			        <goal>single</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>
			<plugin>
			  <groupId>com.spotify</groupId>
			  <artifactId>dockerfile-maven-plugin</artifactId>
			  <version>${dockerfile-maven-plugin.version}</version>
			  <executions>
			    <execution>
			      <id>default</id>
			      <goals>
			        <goal>build</goal>
			        <goal>push</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			    <repository>ketannakum/learnspring-docker</repository>
			    <!-- <tag>${project.version}</tag> -->
			    <tag>master</tag>
			    <buildArgs>
			      <!--  <JAR_FILE>${project.build.finalName}-jar-with-dependencies.jar</JAR_FILE> -->
			      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
			    </buildArgs>
			    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                <skip>false</skip>
			  </configuration>
			</plugin>
		</plugins>
	</build>

</project>
